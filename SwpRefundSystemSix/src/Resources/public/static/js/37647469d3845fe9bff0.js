"use strict";(window["webpackJsonpPluginswp-refund-system-six"]=window["webpackJsonpPluginswp-refund-system-six"]||[]).push([[559],{559:function(e,t,n){n.r(t),n.d(t,{default:function(){return d}});let{mapPropertyErrors:a}=Shopware.Component.getComponentHelper(),{Mixin:s,StateDeprecated:i}=Shopware;var d={template:'{% block refund_system_six_detail %}\n<sw-page class="refund-system-six-detail">\n\n    {% block refund_system_six_detail_header %}\n    <template #smart-bar-header>\n        <h2>{{ placeholder(refundSystem, \'name\', $tc(\'refundsystem.detail.textHeadline\')) }}</h2>\n    </template>\n    {% endblock %}\n\n    {% block refund_system_six_detail_actions %}\n    <template #smart-bar-actions>\n\n        {% block refund_system_six_detail_actions_abort %}\n        <sw-button :disabled="refundSystemIsLoading" v-tooltip.bottom="tooltipCancel" @click="onCancel">\n            {{ $tc(\'refundsystem.detail.buttonCancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block refund_system_six_detail_actions_save %}\n        <sw-button-process\n            class="refund-system-six-detail__save-action"\n            :isLoading="isLoading"\n            v-model:value="isSaveSuccessful"\n            :disabled="isLoading"\n            variant="primary"\n            v-tooltip.bottom="tooltipSave"\n            @click.prevent="onSave">\n            {{ $tc(\'refundsystem.detail.buttonSave\') }}\n        </sw-button-process>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n    {% block refundSystem_language_switch %}\n    <template #language-switch>\n        <sw-language-switch\n            :disabled="!refundSystemId"\n            :saveChangesFunction="saveOnLanguageChange"\n            :abortChangeFunction="abortOnLanguageChange"\n            @on-change="onChangeLanguage">\n        </sw-language-switch>\n    </template>\n    {% endblock %}\n\n\n    {% block refund_system_six_detail_content %}\n<template #content>\n    <sw-card-view>\n\n        {% block refund_system_six_detail_content_language_info %}\n        <sw-language-info\n            :entityDescription="placeholder(refundSystem, \'name\', $tc(\'refundsystem.detail.textHeadline\'))">\n        </sw-language-info>\n        {% endblock %}\n\n        {% block refund_system_six_detail_base_basic_info_card %}\n        <sw-card :title="$tc(\'refundsystem.detail.cardTitleInfo\')" :isLoading="refundSystemIsLoading" positionIdentifier="refund-system-six-detail">\n            <template v-if="!refundSystemIsLoading">\n                <sw-container class="refund-system-six-detail__container"\n                              columns="repeat(auto-fit, minmax(250px, 1fr)"\n                              gap="0 30px">\n                    <div class="refund-system-six-detail__base-info-wrapper">\n\n                        {% block refund_system_six_detail_base_info_field_name %}\n                        <sw-text-field :label="$tc(\'refundsystem.detail.labelName\')"\n                                  :placeholder="placeholder(refundSystem, \'name\', $tc(\'refundsystem.detail.placeholderName\'))"\n                                  name="name"\n                                  validation="required"\n                                  required\n                                  {#:error="graduatedPriceGroupsNameError" #}\n                                  v-model:value="refundSystem.name">\n                        </sw-text-field>\n                        {% endblock %}\n\n                        {% block refund_system_six_settings_form_active_field %}\n                        <sw-switch-field :label="$tc(\'sw-product.settingsForm.labelActive\')"\n                                  v-model:value="refundSystem.active">\n                        </sw-switch-field>\n                        {% endblock %}\n\n                    </div>\n                </sw-container>\n\n                {% block refund_system_six_detail_base_info_field_description %}\n                <sw-text-editor\n                    :label="$tc(\'refundsystem.detail.labelDescription\')"\n                    :placeholder="placeholder(refundSystem, \'description\', $tc(\'refundsystem.detail.placeholderDescription\'))"\n                    name="description"\n                    validation="required"\n                    required\n                    v-model:value="refundSystem.description">\n                </sw-text-editor>\n                {% endblock %}\n\n                {% block refund_system_six_detail_base_info_field_media %}\n                    <sw-upload-listener\n                            :key="refundSystem.id + \'uploadListener\'"\n                            :upload-tag="refundSystem.id"\n                            auto-upload\n                            @media-upload-finish="onSetMediaItem"\n                    />\n                    <sw-media-upload-v2\n                            :key="refundSystem.id + \'upload\'"\n                            :label="$tc(\'refundsystem.detail.labelMedia\')"\n                            variant="regular"\n                            :source="mediaItem"\n                            :upload-tag="refundSystem.id"\n                            :allow-multi-select="false"\n                            :default-folder="getDefaultFolder"\n                            @media-drop="onMediaDropped"\n                            @media-upload-remove-image="onRemoveMediaItem"\n                    />\n                {% endblock %}\n\n            </template>\n        </sw-card>\n        {% endblock %}\n    </sw-card-view>\n</template>\n    {% endblock %}\n\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[s.getByName("placeholder"),s.getByName("notification")],shortcuts:{"SYSTEMKEY+S":"onSave",ESCAPE:"onCancel"},props:{refundSystemId:{type:String,required:!1,default:null}},data(){return{refundSystem:null,isLoading:!1,isSaveSuccessful:!1,media:null}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{identifier(){return this.placeholder(this.refundSystem,"name")},refundSystemIsLoading(){return this.isLoading||null==this.refundSystem},refundSystemRepository(){return this.repositoryFactory.create("refund_system")},tooltipSave(){let e=this.$device.getSystemKey();return{message:`${e} + S`,appearance:"light"}},tooltipCancel(){return{message:"ESC",appearance:"light"}},...a("refundSystem",["name"]),getDefaultFolder(){return this.refundSystem.getEntityName()},mediaItem(){return this.refundSystem&&this.refundSystem.mediaId&&!this.media&&this.mediaRepository.get(this.refundSystem.mediaId).then(e=>{this.media=e}),this.media?this.media:null},mediaRepository(){return this.repositoryFactory.create("media")}},watch:{refundSystemId(){this.createdComponent()}},created(){this.createdComponent()},methods:{abortOnLanguageChange(){return Shopware.State.getters["swpRefundSystem/hasChanges"]},saveOnLanguageChange(){return this.onSave()},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e)},createdComponent(){if(this.refundSystemId||Shopware.Context.api.languageId===Shopware.Context.api.systemLanguageId||Shopware.State.commit("context/setApiLanguageId",Shopware.Context.api.systemLanguageId),this.refundSystemId){this.loadEntityData();return}this.refundSystem=this.refundSystemRepository.create(Shopware.Context.api)},loadEntityData(){this.isLoading=!0,this.refundSystemRepository.get(this.refundSystemId,Shopware.Context.api).then(e=>{this.isLoading=!1,this.refundSystem=e})},onSave(){this.isLoading=!0,this.refundSystemRepository.save(this.refundSystem,Shopware.Context.api).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0;let e=this.refundSystem.name;if(this.createNotificationSuccess({title:Shopware.Snippet.tc("refundsystem.detail.titleSaveSuccess"),message:Shopware.Snippet.tc("refundsystem.detail.messageSaveSuccess",0,{name:e})}),null===this.refundSystemId){this.$router.push({name:"swp.refund.system.detail",params:{id:this.refundSystem.id}});return}this.loadEntityData()}).catch(e=>{this.isLoading=!1;let t=this.refundSystem.name;throw this.createNotificationError({title:Shopware.Snippet.tc("global.default.error"),message:Shopware.Snippet.tc("global.notification.notificationSaveErrorMessage",0,{entityName:t})}),e})},onCancel(){this.$router.push({name:"swp.refund.system.overview"})},onSetMediaItem({targetId:e}){this.mediaRepository.get(e).then(t=>{this.refundSystem.mediaId=e,this.media=t})},onRemoveMediaItem(){this.refundSystem.mediaId=null,this.media=null},onMediaDropped(e){this.onSetMediaItem({targetId:e.id})}}}}}]);
//# sourceMappingURL=37647469d3845fe9bff0.js.map