{"version":3,"file":"static/js/37647469d3845fe9bff0.js","mappings":"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","sources":["webpack://administration/../../../../../../custom/plugins/SwpRefundSystemSix/src/Resources/app/administration/src/module/swp-refund-system/page/swp-refund-system-detail/index.js","webpack://administration/../../../../../../custom/plugins/SwpRefundSystemSix/src/Resources/app/administration/src/module/swp-refund-system/page/swp-refund-system-detail/swp-refund-system-detail.html.twig"],"sourcesContent":["import template from './swp-refund-system-detail.html.twig';\n\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\nconst { Mixin, StateDeprecated } = Shopware;\n\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification')\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': 'onSave',\n        ESCAPE: 'onCancel'\n    },\n\n    props: {\n        refundSystemId: {\n            type: String,\n            required: false,\n            default: null\n        }\n    },\n\n\n    data() {\n        return {\n            refundSystem: null,\n            isLoading: false,\n            isSaveSuccessful: false,\n            media: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier)\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.placeholder(this.refundSystem, 'name');\n        },\n\n        refundSystemIsLoading() {\n            return this.isLoading || this.refundSystem == null;\n        },\n\n        refundSystemRepository() {\n            return this.repositoryFactory.create('refund_system');\n        },\n\n        tooltipSave() {\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light'\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light'\n            };\n        },\n\n        ...mapPropertyErrors('refundSystem', ['name']),\n\n        // media\n\n        getDefaultFolder() {\n            return this.refundSystem.getEntityName();\n        },\n\n        mediaItem() {\n            if(this.refundSystem)\n            {\n                if(this.refundSystem.mediaId && !this.media)\n                {\n                    this.mediaRepository.get(this.refundSystem.mediaId).then((media) => {\n                        this.media = media;\n                    });\n                }\n            }\n            return (this.media) ? this.media : null;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n    },\n\n    watch: {\n        refundSystemId() {\n            this.createdComponent();\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        abortOnLanguageChange() {\n            return Shopware.State.getters['swpRefundSystem/hasChanges'];\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage(languageId) {\n\n                Shopware.State.commit('context/setApiLanguageId', languageId)\n        },\n\n\n        createdComponent() {\n\n            if (!this.refundSystemId) {\n                if (Shopware.Context.api.languageId !== Shopware.Context.api.systemLanguageId) {\n                    Shopware.State.commit('context/setApiLanguageId', Shopware.Context.api.systemLanguageId);\n                }\n\n            }\n\n            if (this.refundSystemId) {\n                this.loadEntityData();\n                return;\n            }\n            this.refundSystem = this.refundSystemRepository.create(Shopware.Context.api);\n        },\n\n        loadEntityData() {\n            this.isLoading = true;\n\n            this.refundSystemRepository.get(this.refundSystemId, Shopware.Context.api).then((refundSystem) => {\n                this.isLoading = false;\n                this.refundSystem = refundSystem;\n            });\n        },\n\n        onSave() {\n            this.isLoading = true;\n\n            this.refundSystemRepository.save(this.refundSystem, Shopware.Context.api).then(() => {\n                this.isLoading = false;\n                this.isSaveSuccessful = true;\n\n                const refundSystemName = this.refundSystem.name;\n\n                this.createNotificationSuccess({\n                    title: Shopware.Snippet.tc('refundsystem.detail.titleSaveSuccess'),\n                    message: Shopware.Snippet.tc(\n                        'refundsystem.detail.messageSaveSuccess', 0, { name: refundSystemName }\n                    )\n                });\n\n                if (this.refundSystemId === null) {\n                    this.$router.push({ name: 'swp.refund.system.detail', params: { id: this.refundSystem.id } });\n                    return;\n                }\n\n                this.loadEntityData();\n\n            }).catch((exception) => {\n                this.isLoading = false;\n                const refundSystemName = this.refundSystem.name;\n                this.createNotificationError({\n                    title: Shopware.Snippet.tc('global.default.error'),\n                    message: Shopware.Snippet.tc(\n                        'global.notification.notificationSaveErrorMessage', 0, { entityName: refundSystemName }\n                    )\n                });\n                throw exception;\n            });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'swp.refund.system.overview' });\n        },\n\n        //media\n\n        onSetMediaItem({ targetId }) {\n            this.mediaRepository.get(targetId).then((updatedMedia) => {\n                this.refundSystem.mediaId = targetId;\n                this.media = updatedMedia;\n            });\n        },\n\n        onRemoveMediaItem() {\n            this.refundSystem.mediaId = null;\n            this.media = null;\n        },\n\n        onMediaDropped(dropItem) {\n            // to be consistent refetch entity with repository\n            this.onSetMediaItem({ targetId: dropItem.id });\n        },\n    }\n};\n","export default \"{% block refund_system_six_detail %}\\n<sw-page class=\\\"refund-system-six-detail\\\">\\n\\n    {% block refund_system_six_detail_header %}\\n    <template #smart-bar-header>\\n        <h2>{{ placeholder(refundSystem, 'name', $tc('refundsystem.detail.textHeadline')) }}</h2>\\n    </template>\\n    {% endblock %}\\n\\n    {% block refund_system_six_detail_actions %}\\n    <template #smart-bar-actions>\\n\\n        {% block refund_system_six_detail_actions_abort %}\\n        <sw-button :disabled=\\\"refundSystemIsLoading\\\" v-tooltip.bottom=\\\"tooltipCancel\\\" @click=\\\"onCancel\\\">\\n            {{ $tc('refundsystem.detail.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        {% block refund_system_six_detail_actions_save %}\\n        <sw-button-process\\n            class=\\\"refund-system-six-detail__save-action\\\"\\n            :isLoading=\\\"isLoading\\\"\\n            v-model:value=\\\"isSaveSuccessful\\\"\\n            :disabled=\\\"isLoading\\\"\\n            variant=\\\"primary\\\"\\n            v-tooltip.bottom=\\\"tooltipSave\\\"\\n            @click.prevent=\\\"onSave\\\">\\n            {{ $tc('refundsystem.detail.buttonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n\\n    {% block refundSystem_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            :disabled=\\\"!refundSystemId\\\"\\n            :saveChangesFunction=\\\"saveOnLanguageChange\\\"\\n            :abortChangeFunction=\\\"abortOnLanguageChange\\\"\\n            @on-change=\\\"onChangeLanguage\\\">\\n        </sw-language-switch>\\n    </template>\\n    {% endblock %}\\n\\n\\n    {% block refund_system_six_detail_content %}\\n<template #content>\\n    <sw-card-view>\\n\\n        {% block refund_system_six_detail_content_language_info %}\\n        <sw-language-info\\n            :entityDescription=\\\"placeholder(refundSystem, 'name', $tc('refundsystem.detail.textHeadline'))\\\">\\n        </sw-language-info>\\n        {% endblock %}\\n\\n        {% block refund_system_six_detail_base_basic_info_card %}\\n        <sw-card :title=\\\"$tc('refundsystem.detail.cardTitleInfo')\\\" :isLoading=\\\"refundSystemIsLoading\\\" positionIdentifier=\\\"refund-system-six-detail\\\">\\n            <template v-if=\\\"!refundSystemIsLoading\\\">\\n                <sw-container class=\\\"refund-system-six-detail__container\\\"\\n                              columns=\\\"repeat(auto-fit, minmax(250px, 1fr)\\\"\\n                              gap=\\\"0 30px\\\">\\n                    <div class=\\\"refund-system-six-detail__base-info-wrapper\\\">\\n\\n                        {% block refund_system_six_detail_base_info_field_name %}\\n                        <sw-text-field :label=\\\"$tc('refundsystem.detail.labelName')\\\"\\n                                  :placeholder=\\\"placeholder(refundSystem, 'name', $tc('refundsystem.detail.placeholderName'))\\\"\\n                                  name=\\\"name\\\"\\n                                  validation=\\\"required\\\"\\n                                  required\\n                                  {#:error=\\\"graduatedPriceGroupsNameError\\\" #}\\n                                  v-model:value=\\\"refundSystem.name\\\">\\n                        </sw-text-field>\\n                        {% endblock %}\\n\\n                        {% block refund_system_six_settings_form_active_field %}\\n                        <sw-switch-field :label=\\\"$tc('sw-product.settingsForm.labelActive')\\\"\\n                                  v-model:value=\\\"refundSystem.active\\\">\\n                        </sw-switch-field>\\n                        {% endblock %}\\n\\n                    </div>\\n                </sw-container>\\n\\n                {% block refund_system_six_detail_base_info_field_description %}\\n                <sw-text-editor\\n                    :label=\\\"$tc('refundsystem.detail.labelDescription')\\\"\\n                    :placeholder=\\\"placeholder(refundSystem, 'description', $tc('refundsystem.detail.placeholderDescription'))\\\"\\n                    name=\\\"description\\\"\\n                    validation=\\\"required\\\"\\n                    required\\n                    v-model:value=\\\"refundSystem.description\\\">\\n                </sw-text-editor>\\n                {% endblock %}\\n\\n                {% block refund_system_six_detail_base_info_field_media %}\\n                    <sw-upload-listener\\n                            :key=\\\"refundSystem.id + 'uploadListener'\\\"\\n                            :upload-tag=\\\"refundSystem.id\\\"\\n                            auto-upload\\n                            @media-upload-finish=\\\"onSetMediaItem\\\"\\n                    />\\n                    <sw-media-upload-v2\\n                            :key=\\\"refundSystem.id + 'upload'\\\"\\n                            :label=\\\"$tc('refundsystem.detail.labelMedia')\\\"\\n                            variant=\\\"regular\\\"\\n                            :source=\\\"mediaItem\\\"\\n                            :upload-tag=\\\"refundSystem.id\\\"\\n                            :allow-multi-select=\\\"false\\\"\\n                            :default-folder=\\\"getDefaultFolder\\\"\\n                            @media-drop=\\\"onMediaDropped\\\"\\n                            @media-upload-remove-image=\\\"onRemoveMediaItem\\\"\\n                    />\\n                {% endblock %}\\n\\n            </template>\\n        </sw-card>\\n        {% endblock %}\\n    </sw-card-view>\\n</template>\\n    {% endblock %}\\n\\n</sw-page>\\n{% endblock %}\\n\";"],"names":["mapPropertyErrors","Shopware","Component","getComponentHelper","Mixin","StateDeprecated","template","inject","mixins","getByName","shortcuts","ESCAPE","props","refundSystemId","type","String","required","default","data","refundSystem","isLoading","isSaveSuccessful","media","metaInfo","title","$createTitle","identifier","computed","placeholder","refundSystemIsLoading","refundSystemRepository","repositoryFactory","create","tooltipSave","systemKey","$device","getSystemKey","message","appearance","tooltipCancel","getDefaultFolder","getEntityName","mediaItem","mediaId","mediaRepository","get","then","watch","createdComponent","created","methods","abortOnLanguageChange","State","getters","saveOnLanguageChange","onSave","onChangeLanguage","languageId","commit","Context","api","systemLanguageId","loadEntityData","save","refundSystemName","name","createNotificationSuccess","Snippet","tc","$router","push","params","id","catch","createNotificationError","entityName","exception","onCancel","onSetMediaItem","targetId","updatedMedia","onRemoveMediaItem","onMediaDropped","dropItem"],"sourceRoot":""}